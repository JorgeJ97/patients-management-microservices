services:
  patients-service:
    image: patients-service-image:latest
    container_name: patients-service-container
    build: .
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
#    ports:
#      - "4000:4000"

    networks:
      - patients-management-network


  db:
    image: postgres:latest
    container_name: patients-db-container

    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

#    ports:
#      - "5433:5432"

    volumes:
      - patients_data:/var/lib/postgresql/data

    networks:
      - patients-management-network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka-container
    environment:
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
#    ports:
#      - "9092:9092"
#      - "9094:9094"

    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - patients-management-network

volumes:
  patients_data:
  kafka_data:

networks:
  patients-management-network:
    external: true


